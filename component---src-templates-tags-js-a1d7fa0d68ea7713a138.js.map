{"version":3,"file":"component---src-templates-tags-js-a1d7fa0d68ea7713a138.js","mappings":"8LAsFA,UA5EoB,IAA4B,IAA3B,YAAEA,EAAW,KAAEC,GAAM,EAExC,MAAM,IAACC,GAAUF,EACXG,EAAQF,EAAKG,kBAAkBC,MACxBJ,EAAKG,kBAAkBE,MAEpC,OACE,gBAAC,IAAM,CAACC,SAAQ,GAAMC,MAAM,OAExB,2BAASC,MAAM,oBACb,uBAAKA,MAAM,aACT,qBAAGC,UAAWC,EAAAA,IAAkB,OAChC,qBAAGD,UAAWC,EAAAA,IAAkBT,GAChC,qBAAGQ,UAAWC,EAAAA,IAAiB,mBACZR,EAAMS,OAAQ,WAKrC,2BAASH,MAAM,WACb,sBAAKI,MAAO,CAAEC,UAAU,SACvBX,EAAMY,KAAIC,IACP,MAAMR,EAAQQ,EAAKC,YAAYT,OAASQ,EAAKE,OAAOC,KACpD,OAEE,sBAAIV,MAAM,OAAOW,IAAKJ,EAAKE,OAAOC,MAChC,2BAASV,MAAM,gBACb,8BACE,uBAAKA,MAAM,SACT,gBAAC,EAAAY,KAAI,CAACC,GAAIN,EAAKE,OAAOC,KAAMI,SAAS,OACnC,wBAAMA,SAAS,YAAYf,KAG/B,6BAAQQ,EAAKC,YAAYO,OAE3B,+BACE,qBAAGf,MAAM,gBACPgB,wBAAyB,CACvBC,OAAQV,EAAKC,YAAYU,aAAeX,EAAKY,SAE/CL,SAAS,kBAIZ,MAKR,C","sources":["webpack://gatsby-blog/./src/templates/tags.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Bio from \"../components/bio\"\nimport Seo from \"../components/seo\"\nimport PropTypes from \"prop-types\"\nimport Layout from \"../components/layout/layout\"\nimport Tags from \"../pages/tags\"\nimport * as Classes from './templates.module.css';\n\n\nconst TagTemplate = ({ pageContext, data }) => {\n\n  const {tag }   = pageContext\n  const posts = data.allMarkdownRemark.nodes\n  const tags = data.allMarkdownRemark.group;\n\n  return (\n    <Layout location={``} title=\"Tag\">\n\n        <section class=\"hero is-primary \">\n          <div class=\"hero-body\">\n            <p className={Classes.menumame}>Tag</p>\n            <p className={Classes.tagname}>{tag}</p>\n            <p className={Classes.subname}>\n              A collection of {posts.length } post\n            </p>\n          </div>\n        </section>\n\n        <section class=\"section\">\n          <ol  style={{ listStyle: `none` }}>\n          {posts.map(post => {\n              const title = post.frontmatter.title || post.fields.slug\n              return (\n                // <PostsList posts={posts} />\n                <li class=\"card\" key={post.fields.slug}>\n                  <article class=\"card-content\">\n                    <header>\n                      <div class=\"title\">\n                        <Link to={post.fields.slug} itemProp=\"url\">\n                          <span itemProp=\"headline\">{title}</span>\n                        </Link>\n                      </div>\n                      <small>{post.frontmatter.date}</small>\n                    </header>\n                    <section>\n                      <p class=\"subtitle is-6\"\n                        dangerouslySetInnerHTML={{\n                          __html: post.frontmatter.description || post.excerpt,\n                        }}\n                        itemProp=\"description\"\n                      />\n                    </section>\n                  </article>\n                </li>\n              )\n      })}\n          </ol>\n        </section>\n    </Layout>\n  )\n}\n\nTagTemplate.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default TagTemplate\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: {slug: DESC}}\n      filter: { frontmatter: { tags: { eq: $tag } } }\n    ){\n      group(field: { frontmatter: { tags: SELECT }}) {\n        fieldValue\n        totalCount\n        }\n       nodes {\n         excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            category\n            tags\n            title\n            description\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n        }\n    }\n  }\n`\n"],"names":["pageContext","data","tag","posts","allMarkdownRemark","nodes","group","location","title","class","className","Classes","length","style","listStyle","map","post","frontmatter","fields","slug","key","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt"],"sourceRoot":""}