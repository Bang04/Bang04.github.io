{"version":3,"file":"component---src-templates-categories-js-ad70c10f6d6d0925f489.js","mappings":"uMA8BA,MAvBmB,IAAqB,IAApB,WAAEA,GAAY,EAE/B,OACK,uBAAKC,UCTW,wCDUX,qBAAGC,MAAM,cACR,yBAAG,eAEJ,sBAAIA,MAAM,0BACTF,aAAU,EAAVA,EAAYG,KAAIC,GACT,0BACG,gBAAC,EAAAC,KAAI,CAACC,GAAE,eAAiBC,IAAUH,GAAS,KACtCA,OAQhB,C,iIE2Cd,UA3DiB,IAA8B,IAA5B,YAAGI,EAAW,KAAEC,GAAM,EAEvC,MAAM,SAAEL,GAAaI,EACfE,EAAQD,EAAKE,kBAAkBC,MAClBH,EAAKE,kBAAkBE,aAExC,OACI,gBAAC,IAAM,CAACC,SAAS,GAAGC,MAAOX,GACxB,2BAASF,MAAM,mBACZ,uBAAKA,MAAM,aACT,qBAAGD,UAAWe,EAAAA,IAAkB,YAChC,qBAAGf,UAAWe,EAAAA,IAAkBZ,GAChC,qBAAGH,UAAWe,EAAAA,IAAiB,mBACZN,EAAMO,OAAQ,WAKrC,2BAASf,MAAM,WACb,sBAAKgB,MAAO,CAAEC,UAAU,SACnBT,EAAMP,KAAIiB,IACT,MAAML,EAAQK,EAAKC,YAAYN,OAASK,EAAKE,OAAOC,KAC9CC,EAAaJ,EAAKC,YAAYI,KACpC,OACI,sBAAIvB,MAAM,OAAOwB,IAAKN,EAAKE,OAAOC,MAC9B,2BAASrB,MAAM,gBACf,8BACI,uBAAKA,MAAM,SACX,gBAAC,EAAAG,KAAI,CAACC,GAAIc,EAAKE,OAAOC,KAAMI,SAAS,OACjC,wBAAMA,SAAS,YAAYZ,KAG/B,6BAAQK,EAAKC,YAAYO,OAE7B,+BACI,qBAAG1B,MAAM,gBACT2B,wBAAyB,CACrBC,OAAQV,EAAKC,YAAYU,aAAeX,EAAKY,SAEjDL,SAAS,kBAIb,uBAAKzB,MAAM,mBACNsB,EAASrB,KAAK8B,GACX,gBAAC,EAAA5B,KAAI,CAACC,GAAE,SAAWC,IAAU0B,GAAI,KAC/B,wBAAM/B,MAAM,wBAAuB,KAAG+B,OAK/C,MAKZ,C","sources":["webpack://gatsby-blog/./src/pages/categories.js","webpack://gatsby-blog/./src/pages/categories.module.css","webpack://gatsby-blog/./src/templates/categories.js"],"sourcesContent":["import React from \"react\";\nimport { Link, graphql } from \"gatsby\"\nimport kebabCase from \"lodash/kebabCase\"\nimport 'bulma/css/bulma.min.css';\nimport * as Classes from './categories.module.css';\n\n\nconst Categories = ({ categories }) => {\n\n   return (\n        <div className={Classes.categories}>\n             <p class=\"menu-label\">\n              <b>categories</b>  \n            </p>\n             <ul class=\"menu-list is-one-third\">\n             {categories?.map(category => (\n                     <li>\n                        <Link to={`/categories/${kebabCase(category)}/`}>\n                            { category }\n                        </Link>\n                    </li>\n                )\n             )\n             }\n              {/* <a class=\"is-active\">Manage Your Team</a> */}\n            </ul>\n        </div>\n    )\n}\n\nexport default Categories\n\nexport const pageQuery = graphql`\n  query Category($category: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: {slug: DESC}}\n      filter: { frontmatter: { category: { in: [$category] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","// extracted by mini-css-extract-plugin\nexport var categories = \"categories-module--categories--bd5c1\";","import React from \"react\";\nimport { Link, graphql } from \"gatsby\"\nimport kebabCase from \"lodash/kebabCase\"\nimport Bio from \"../components/bio\"\nimport Seo from \"../components/seo\"\nimport Layout from \"../components/layout/layout\"\nimport Tags from \"../pages/tags\"\nimport * as Classes from './templates.module.css';\nimport Categoris from \"../pages/categories\"\n\nconst Category = ( {  pageContext, data }) => {\n\n  const { category } = pageContext\n  const posts = data.allMarkdownRemark.nodes\n  const categories = data.allMarkdownRemark.categoryList\n  \n    return (\n        <Layout location=\"\" title={category} >\n           <section class=\"hero is-primary\">\n              <div class=\"hero-body\">\n                <p className={Classes.menumame}>Category</p>\n                <p className={Classes.tagname}>{category}</p>\n                <p className={Classes.subname}>\n                  A collection of {posts.length } post\n                </p>\n              </div>\n            </section>\n\n            <section class=\"section\">\n              <ol  style={{ listStyle: `none` }}>\n                  {posts.map(post => {\n                    const title = post.frontmatter.title || post.fields.slug\n                    const postTags  =  post.frontmatter.tags \n                    return (\n                        <li class=\"card\" key={post.fields.slug}>\n                            <article class=\"card-content\">\n                            <header>\n                                <div class=\"title\">\n                                <Link to={post.fields.slug} itemProp=\"url\">\n                                    <span itemProp=\"headline\">{title}</span>\n                                </Link>\n                                </div>\n                                <small>{post.frontmatter.date}</small>\n                            </header>\n                            <section>\n                                <p class=\"subtitle is-6\"\n                                dangerouslySetInnerHTML={{\n                                    __html: post.frontmatter.description || post.excerpt,\n                                }}\n                                itemProp=\"description\"\n                                />\n                            </section>\n                            </article>\n                            <div class=\"tags are-medium\">\n                                {postTags.map((tag) => (\n                                    <Link to={`/tags/${kebabCase(tag)}/`}>\n                                      <span class=\"tag is-info is-light\"># {tag}</span>\n                                    </Link>\n                                  )\n                                )}\n                            </div>\n                        </li>\n                    )\n                  })} \n              </ol>\n            </section>\n        </Layout>\n    )\n}\nexport default Category\n\n// 쿼리의 argument인 $category는 page context로 전달 받는다.\nexport const pageQuery = graphql`\n  query($category: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: {slug: DESC}}\n      filter: { frontmatter: { category: { eq: $category } } }\n    ) \n    {\n      group(field: { frontmatter: { category: SELECT }}) {\n        totalCount\n        }\n       nodes {\n         excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            category\n            tags\n            title\n            description\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n        }\n    }\n  }\n`\n"],"names":["categories","className","class","map","category","Link","to","kebabCase","pageContext","data","posts","allMarkdownRemark","nodes","categoryList","location","title","Classes","length","style","listStyle","post","frontmatter","fields","slug","postTags","tags","key","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt","tag"],"sourceRoot":""}